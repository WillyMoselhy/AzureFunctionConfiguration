<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="136" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2023-03-25" time="17:07:43">
  <environment cwd="C:\GitDevOps\AzureFunctionConfiguration" machine-name="DESKTOP-K2LN8MJ" os-version="10.0.25324" user-domain="MIDDLEEAST" platform="Microsoft Windows 11 Enterprise Insider Preview|C:\WINDOWS|\Device\Harddisk0\Partition3" nunit-version="2.5.8.0" clr-version="Unknown" user="wmoselhy" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="1.305" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\GitDevOps\AzureFunctionConfiguration\tests\general\PSScriptAnalyzer.Tests.ps1" executed="True" result="Success" success="True" time="1.305" asserts="0" description="C:\GitDevOps\AzureFunctionConfiguration\tests\general\PSScriptAnalyzer.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Invoking PSScriptAnalyzer against commandbase" executed="True" result="Success" success="True" time="1.0801" asserts="0" description="Invoking PSScriptAnalyzer against commandbase">
            <results>
              <test-suite type="TestFixture" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig" executed="True" result="Success" success="True" time="0.5394" asserts="0" description="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAlignAssignmentStatement" executed="True" result="Success" success="True" time="0.5284" asserts="0" description="Should pass PSAlignAssignmentStatement">
                    <results>
                      <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAlignAssignmentStatement(PSAlignAssignmentStatement,null)" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingCmdletAliases" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidGlobalAliases" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidGlobalFunctions" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidGlobalVars" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidInvokingEmptyMembers" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidLongLines" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidLongLines" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidMultipleTypeAttributes" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidMultipleTypeAttributes" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidOverwritingBuiltInCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidOverwritingBuiltInCmdlets" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingPositionalParameters" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSReservedCmdletChar" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSReservedParams" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidSemicolonsAsLineTerminators" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidSemicolonsAsLineTerminators" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidShouldContinueWithoutForce" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidTrailingWhitespace" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingUsernameAndPasswordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingUsernameAndPasswordParams" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingBrokenHashAlgorithms" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingBrokenHashAlgorithms" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingComputerNameHardcoded" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingDoubleQuotesForConstantString" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingDoubleQuotesForConstantString" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingInvokeExpression" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingPlainTextForPassword" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingWMICmdlet" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSAvoidUsingWriteHost" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCompatibleCommands" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseCompatibleCommands" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCompatibleSyntax" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseCompatibleSyntax" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCompatibleTypes" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseCompatibleTypes" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSMisleadingBacktick" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSMissingModuleManifestField" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSPlaceCloseBrace" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSPlaceOpenBrace" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSProvideCommentHelp" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSReviewUnusedParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSReviewUnusedParameter" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseApprovedVerbs" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseCmdletCorrectly" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseCompatibleCmdlets" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseConsistentIndentation" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseConsistentWhitespace" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCorrectCasing" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseCorrectCasing" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseLiteralInitializerForHashtable" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseOutputTypeCorrectly" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseProcessBlockForPipelineCommand" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseProcessBlockForPipelineCommand" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUsePSCredentialType" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSShouldProcess" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseSingularNouns" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseSupportsShouldProcess" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseToExportFieldsInManifest" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseUsingScopeModifierInNewRunspaces" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseUsingScopeModifierInNewRunspaces" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSUseUTF8EncodingForHelpFile" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSDSCDscExamplesPresent" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSDSCDscTestsPresent" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-FunctionConfig.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig" executed="True" result="Success" success="True" time="1.0703" asserts="0" description="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAlignAssignmentStatement" executed="True" result="Success" success="True" time="0.5215" asserts="0" description="Should pass PSAlignAssignmentStatement">
                    <results>
                      <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAlignAssignmentStatement(PSAlignAssignmentStatement,null)" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingCmdletAliases" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingEmptyCatchBlock" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidGlobalAliases" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidGlobalFunctions" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidGlobalVars" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidInvokingEmptyMembers" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidLongLines" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidLongLines" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidMultipleTypeAttributes" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidMultipleTypeAttributes" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidOverwritingBuiltInCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidOverwritingBuiltInCmdlets" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingPositionalParameters" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSReservedCmdletChar" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSReservedParams" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidSemicolonsAsLineTerminators" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidSemicolonsAsLineTerminators" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidShouldContinueWithoutForce" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidTrailingWhitespace" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingUsernameAndPasswordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingUsernameAndPasswordParams" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingBrokenHashAlgorithms" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingBrokenHashAlgorithms" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingDoubleQuotesForConstantString" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingDoubleQuotesForConstantString" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingInvokeExpression" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingPlainTextForPassword" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingWMICmdlet" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSAvoidUsingWriteHost" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCompatibleCommands" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseCompatibleCommands" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCompatibleSyntax" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseCompatibleSyntax" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCompatibleTypes" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseCompatibleTypes" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSMisleadingBacktick" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSMissingModuleManifestField" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSPlaceCloseBrace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSPlaceOpenBrace" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSProvideCommentHelp" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSReviewUnusedParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSReviewUnusedParameter" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseApprovedVerbs" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseCmdletCorrectly" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseCompatibleCmdlets" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseConsistentIndentation" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseConsistentWhitespace" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseCorrectCasing" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseCorrectCasing" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseLiteralInitializerForHashtable" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseOutputTypeCorrectly" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseProcessBlockForPipelineCommand" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseProcessBlockForPipelineCommand" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUsePSCredentialType" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSShouldProcess" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseSingularNouns" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseSupportsShouldProcess" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseToExportFieldsInManifest" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseUsingScopeModifierInNewRunspaces" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseUsingScopeModifierInNewRunspaces" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSUseUTF8EncodingForHelpFile" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSDSCDscExamplesPresent" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSDSCDscTestsPresent" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Import-FunctionConfig.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>